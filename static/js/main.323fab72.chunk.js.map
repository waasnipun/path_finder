{"version":3,"sources":["components/Tile.js","components/sleep.js","Algorithms/BFS.js","Algorithms/DFS.js","pages/landing.js","App.js","reportWebVitals.js","index.js"],"names":["Tile","id","this","props","key","className","style","overflow","width","height","backgroundColor","color","border","onClick","handleClick","React","Component","sleep","ms","Promise","resolve","setTimeout","moves","isCellAvailable","nextX","nextY","len","grid","visited","BFS","startX","startY","length","finished","flood","Array","predesor","i","j","x","y","queue","shortestPath","push","cell","shift","countX","countY","predesorCell","console","log","pop","isPathAvaiable","path","DFS_implement","DFS","Landing","boardSize","grid_value","state","fill","map","handleReset","bind","handleStop","handleClear","fillTiles","handleBFS","handleDFS","newBoard","setState","type","board","stop","createBoard","row","col","number","Container","Row","Col","sm","Button","size","block","variant","margin","cellSpacing","textAlign","tableLayout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.323fab72.chunk.js","sourcesContent":["import React from 'react';\n\nexport class Tile extends React.Component{\n  render(){\n    return (\n      <td\n        id = {this.props.key}\n        className = \"font-white\"\n        style={{\n          overflow:'hidden',\n          width:'40px',\n          height:'40px',\n          backgroundColor:this.props.color,\n          border:\".5px solid #fff\",\n        }}\n        onClick={this.props.handleClick}>\n          {/* {this.props.number} */}\n      </td>\n    )\n  }\n}\n\nexport default Tile;","const DEF_DELAY = 100;\n\nexport function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms || DEF_DELAY));\n}","var moves = [[-1,0],[0,-1],[1,0],[0,1]];\n\nfunction isCellAvailable(nextX,nextY,len,grid,visited){\n    if(0<=nextX && 0<=nextY && nextY<len &&nextX<len && grid[nextX][nextY]!==\"wall\" && visited[nextX][nextY]===0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nexport function BFS(grid,startX,startY){\n    var len = grid.length;\n    var finished = false;\n    var flood = [];\n    var visited = new Array(len);\n    var predesor = new Array(len);\n\n    for(var i=0;i<len;i++){\n        visited[i] = new Array(len);\n        predesor[i] = new Array(len);\n        for(var j=0;j<len;j++){\n            visited[i][j] = 0;\n            predesor[i][j] = {x:0,y:0};\n        }\n    }\n\n    var queue = [];\n    var shortestPath = [];\n    queue.push({x:startX,y:startY});\n    visited[startX][startY] = 1;\n    while(queue.length!==0){\n        var cell = queue.shift()\n        flood.push(cell);\n        for(i=0;i<moves.length;i++){\n            var nextX = cell.x+moves[i][0];\n            var nextY = cell.y+moves[i][1];\n            if(nextX===len-1 && nextY===len-1){\n                predesor[nextX][nextY].x = cell.x;\n                predesor[nextX][nextY].y = cell.y;\n                finished = true;\n                break;\n            }\n            if(isCellAvailable(nextX,nextY,len,grid,visited)){\n                predesor[nextX][nextY].x = cell.x;\n                predesor[nextX][nextY].y = cell.y;\n                visited[nextX][nextY] = 1;\n                queue.push({x:nextX,y:nextY});\n            }\n        }\n        if(finished){\n            queue = [];\n            var countX = len-1;\n            var countY = len-1;\n            while(countX!==startX || countY!==startY){\n                var predesorCell = predesor[countX][countY];\n                console.log(predesorCell);\n                shortestPath.push(predesorCell);\n                countX = predesorCell.x;\n                countY = predesorCell.y;\n            }\n        }\n    }\n\n    flood.shift();\n    flood.pop();\n    const object = {flood:flood,isPathAvaiable:finished,path:shortestPath};\n    return object;\n}","var moves = [[-1,0],[0,-1],[1,0],[0,1]];\nvar visited = new Array(20);\nvar predesor = new Array(20);\nvar finished = false;\nvar flood = [];\n\nfor(var i=0;i<20;i++){\n    visited[i] = new Array(20);\n    predesor[i] = new Array(20);\n    for(var j=0;j<20;j++){\n        visited[i][j] = 0;\n        predesor[i][j] = {x:0,y:0};\n    }\n}\n\nfunction isCellAvailable(nextX,nextY,len,grid,visited){\n    if(0<=nextX && 0<=nextY && nextY<len &&nextX<len && grid[nextX][nextY]!==\"wall\" && visited[nextX][nextY]===0){\n        return true;\n    }\n    else{\n        return false;\n    }\n}\n\nfunction DFS_implement(x,y,len,grid){\n    visited[x][y] = 1;\n    flood.push({x:x,y:y});\n    for(var i =0;i<moves.length;i++){\n        var nextX = x+moves[i][0];\n        var nextY = y+moves[i][1];\n        if(nextX===len-1 && nextY===len-1){\n            predesor[nextX][nextY].x = x;\n            predesor[nextX][nextY].y = y;\n            finished = true;\n            return ;\n        }\n        if(isCellAvailable(nextX,nextY,len,grid,visited) && !finished){\n            DFS_implement(nextX,nextY,len,grid);\n            predesor[nextX][nextY].x = x;\n            predesor[nextX][nextY].y = y;\n        }\n    }\n}\nexport function DFS(grid,startX,startY){\n    var len = grid.length;\n    var shortestPath = [];\n    visited[startX][startY] = 1;\n    DFS_implement(startX,startY,len,grid);\n\n    if(finished){\n        var countX = len-1;\n        var countY = len-1;\n        while(countX!==startX || countY!==startY){\n            var predesorCell = predesor[countX][countY];\n            console.log(predesorCell);\n            shortestPath.push(predesorCell);\n            countX = predesorCell.x;\n            countY = predesorCell.y;\n        }\n    }\n\n    flood.shift();\n    const object = {flood:flood,isPathAvaiable:finished,path:shortestPath};\n    return object;\n}","import React from 'react';\nimport \"../asset/css/style.scss\";\n\n//Components\nimport Tile from \"../components/Tile\";\nimport {sleep} from \"../components/sleep\";\n\nimport { \n    Button,\n    Container,\n    Row,\n    Col\n } from 'react-bootstrap';\n\n //Algorithms\n import {BFS} from \"../Algorithms/BFS\";\n import {DFS} from \"../Algorithms/DFS\";\n\nclass Landing extends React.Component{\n\n    boardSize = 20;\n    grid_value = 0;\n    startX = 10;\n    startY = 10;\n\n    constructor(props){\n        super(props);\n        this.state={\n            'stop':false,\n            'grid': Array(this.boardSize).fill().map(x=>Array(this.boardSize).fill(\"+\"))\n        }\n        //binding this word to helper functions\n        this.handleReset = this.handleReset.bind(this);\n        this.handleStop = this.handleStop.bind(this);\n        this.handleClear = this.handleClear.bind(this);\n        this.fillTiles = this.fillTiles.bind(this);\n        this.handleBFS = this.handleBFS.bind(this);\n        this.handleDFS = this.handleDFS.bind(this);\n\n        this.state.grid[this.startX][this.startY] = \"start_end\";\n        this.state.grid[this.boardSize-1][this.boardSize-1] = \"start_end\";\n    }\n    \n    handleReset(){\n        this.grid_value = 0;\n        var newBoard = Array(this.boardSize).fill().map(x=>Array(this.boardSize).fill(\"+\"));\n        newBoard[this.startX][this.startY] = \"start_end\";\n        newBoard[this.boardSize-1][this.boardSize-1] = \"start_end\";\n        this.setState({'stop':false,'grid':newBoard});\n    }\n\n    handleStop(){\n        this.grid_value = 0;\n        this.setState({'stop':true});\n    }\n\n    handleClear(){\n        this.grid_value = 0;\n        var newBoard = this.state.grid;\n        for(var i=0;i<this.boardSize;i++){\n            for(var j=0;j<this.boardSize;j++){\n                if(newBoard[i][j]!==\"wall\"){\n                    newBoard[i][j] = \"+\";\n                }\n            }\n        }\n        newBoard[this.startX][this.startY] = \"start_end\";\n        newBoard[this.boardSize-1][this.boardSize-1] = \"start_end\";\n        this.setState({\"grid\":newBoard,'stop':false});\n    }\n\n    fillTiles(i,j,type){\n        const board = this.state.grid;\n        board[i][j] = type;\n        this.grid_value = 0;\n        this.setState({'grid':board});\n    }\n\n    async handleBFS(){\n        const board = this.state.grid;\n        const {flood,isPathAvaiable,path} = BFS(board,this.startX,this.startY);\n        console.log(path);\n        for(var i =0;i<flood.length;i++){\n            if(this.state.stop){\n                break;\n            }\n            this.fillTiles(flood[i].x,flood[i].y,\"fill\");\n            await sleep(25);\n        }\n        if(isPathAvaiable){\n            for(i =0;i<path.length-1;i++){\n                if(this.state.stop){\n                    break;\n                }\n                this.fillTiles(path[i].x,path[i].y,\"path\");\n                await sleep(25);\n            }\n        }      \n    }\n\n    async handleDFS(){\n        const board = this.state.grid;\n        const {flood,isPathAvaiable,path} = DFS(board,this.startX,this.startY);\n        console.log(path);\n        for(var i =0;i<flood.length;i++){\n            if(this.state.stop){\n                break;\n            }\n            this.fillTiles(flood[i].x,flood[i].y,\"fill\");\n            await sleep(25);\n        }\n        if(isPathAvaiable){\n            for(i =0;i<path.length-1;i++){\n                if(this.state.stop){\n                    break;\n                }\n                this.fillTiles(path[i].x,path[i].y,\"path\");\n                await sleep(25);\n            }\n        }      \n    }\n\n    render(){\n        const board = this.state.grid;\n        const style = {\n            textAlign: \"center\",\n            margin:\"auto\",\n            height: \"auto\",\n            width:\"500px\",\n            border:\"1px solid black\",\n            tableLayout:'fixed',\n        };\n\n        const createBoard = board.map((row,i)=>{\n            return (\n                <tr key={\"row_\"+i}>\n                    {row.map((col,j)=>{\n                        const color = board[i][j] ===\"+\" ? '#F5B7B1' : board[i][j] === \"wall\" ? '#5D6D7E': board[i][j] === \"path\" ? \"#A93226\":board[i][j] === \"start_end\"?'#000000':\"#F4D03F\";\n                        this.grid_value++;\n                        if(board[i][j]===\"wall\"){\n                            return (\n                                <Tile handleClick={()=>this.fillTiles(i,j,\"+\")} color={color} key={i+\"_\"+j} number={this.grid_value}/>\n                            )\n                        }\n                        else{\n                            return (\n                                <Tile handleClick={()=>this.fillTiles(i,j,\"wall\")} color={color} key={i+\"_\"+j} number={this.grid_value}/>\n                            )\n                        }\n                    })}\n                </tr>\n            )\n        })\n        return(\n            <>\n                <Container>\n                    <br></br><br></br>\n                    <h1 className=\"title\">Path Finder</h1>\n                    <br></br><br></br>\n                    <Row>\n                        <Col sm={2}>\n                            <h2 className=\"subtitle\">Settings</h2>\n                            <br></br><br></br>\n                            <Button className=\"font-family-change\" size=\"lg\" block variant=\"warning\" onClick={this.handleReset}>Reset</Button>{' '}\n                            <Button className=\"font-family-change\" size=\"lg\" block variant=\"primary\" onClick={this.handleClear}>Clear</Button>{' '}\n                            <Button className=\"font-family-change\" size=\"lg\" block variant=\"danger\" onClick={this.handleStop}>Stop</Button>{' '}\n                            <Button className=\"font-family-change\" size=\"lg\" block variant=\"dark\" onClick={this.handleBFS}>BFS</Button>{' '}\n                            <Button className=\"font-family-change\" size=\"lg\" block variant=\"dark\" onClick={this.handleDFS}>DFS</Button>{' '}\n                        </Col>\n                        <Col sm={9}>\n                            <div style={{margin: 'auto'}}>\n                                <table cellSpacing=\"0\" style={style}>\n                                    <tbody>\n                                        {createBoard}\n                                    </tbody>\n                                </table>\n                            </div>\n                        </Col>\n                        <br></br>\n                    </Row>\n                </Container>\n                <br></br>\n                <div\n                    className=\"text-center p-3\"\n                    style={{ backgroundColor: \"rgba(0, 0, 0, 0.9)\" ,color:\"#fff\"}}>\n                    Designed and Built by Nipun Waas\n                </div>\n            </>\n        );\n    }   \n}\nexport default Landing;\n","import './App.css';\n\n// page imports\nimport Landing from \"./pages/landing\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Landing/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}